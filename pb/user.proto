syntax = "proto3";
package pb;

import "google/api/annotations.proto";
import "google/protobuf/timestamp.proto";
import "protoc-gen-swagger/options/annotations.proto";
import "pb/common/common.proto"; 

option go_package = "github.com/DeYu666/blog_common/gen/pb";


// clang-format off
option (grpc.gateway.protoc_gen_swagger.options.openapiv2_swagger) = {
  info: {
    title: "blog system: user service"
    version: "v1.0.0"
  };
};
// clang-format on

service UserService {
  // 获取用户信息列表，根据用户角色来判断他所能看到的状态
  // 需要带上X-Keystone-User-Info
  rpc FindUsers (FindUsersRequest) returns (FindUsersReply) {
    option (google.api.http) = {
      get: "/v1/users"
    };
  }

  // 获取单个用户信息
  // 需要带上X-Keystone-User-Info
  rpc GetUser (GetUserRequest) returns (GetUserReply) {
    option (google.api.http) = {
      get: "/v1/user/{id}"
    };
  }

  // 生成新的用户信息
  // 需要带上X-Keystone-User-Info
  rpc CreateUser (CreateUserRequest) returns (CreateUserReply) {
    option (google.api.http) = {
      post: "/v1/user"
      body: "info"
    };
  }

  // 更新用户信息
  // 需要带上X-Keystone-User-Info
  rpc UpdateUser (UpdateUserRequest) returns (UpdateUserReply) {
    option (google.api.http) = {
      put: "/v1/user/{id}"
      body: "info"
    };
  }

  // 删除用户信息
  // 需要带上X-Keystone-User-Info
  rpc DeleteUser (DeleteUserRequest) returns (DeleteUserReply) {
    option (google.api.http) = {
      delete: "/v1/user/{id}"
    };
  }
}

// ////////////////////////////////////////////////////////////
//
// 用户信息相关请求返回结构
//
// ////////////////////////////////////////////////////////////

// 用户信息列表查询请求结构
message FindUsersRequest {
  // 用户信息编号列表，用于指定查询哪些用户信息
  // 会根据用户权限只返回适合他看的用户信息
  repeated uint64 ids = 1;
  // 用户名列表
  repeated string username = 2;
  // 邮箱列表
  repeated string email = 3;
  // list请求对应的翻页：offset, limit
  common.ListPage page = 5;
}

// 用户信息列表查询返回结构
message FindUsersReply {
  repeated User users = 1;
  // list返回对应的翻页：offset, total
  common.ListPage page = 2;
}

// 单个用户信息查询请求结构
message GetUserRequest {
  // 用户信息编号
  uint64 id = 1;
}

// 单个用户信息查询返回结构
message GetUserReply {
  User user = 1;
}

// 用户信息新增请求结构
message CreateUserRequest {
  // 用户信息基本信息
  UserUpsert info = 1;
}

// 用户信息新增返回结构
message CreateUserReply {
  // 用户信息编号
  uint64 id = 1;
}

// 用户信息修改请求结构
message UpdateUserRequest {
  // 用户信息编号
  uint64 id = 1;
  // 用户信息基本信息
  UserUpsert info = 2;
}

// 用户信息修改返回结构
message UpdateUserReply {}

// 用户信息删除请求结构
message DeleteUserRequest {
  // 用户信息编号
  uint64 id = 1;
}

// 用户信息删除请求结构
message DeleteUserReply {}

// ////////////////////////////////////////////////////////////
//
// 用户信息相关CRUD结构
//
// ////////////////////////////////////////////////////////////

// 用户信息插入/修改结构
message UserUpsert {
  // 可选，用户信息编号，主要为初始化使用
  uint64 id = 30;
  // 密码
  string password = 2;
  // 用户状态
  User.Status status = 3;
  // 用户名
  string username = 4;
  // 邮箱
  string email = 5;
}

// ////////////////////////////////////////////////////////////
//
// 用户信息相关主结构
//
// ////////////////////////////////////////////////////////////

message User {
  // 用户的状态枚举
  enum Status {
    // 不限制，只是用来筛选状态用
    STATUS_UNLIMITED = 0;
    // 普通用户
    STATUS_COMMON = 1;
    // 超级管理员
    STATUS_SUPER = 2;
    // 占位符，用于判断最大值，这个值会随时间改变
    STATUS_NONE = 8;
  }
  // 用户信息编号
  uint64 id = 1;
  // 密码
  string password = 2;
  // 用户状态
  Status status = 3;
  // 用户名
  string username = 4;
  // 邮箱
  string email = 5;
  // 上次登录时间
  google.protobuf.Timestamp last_login = 19;
  // 创建时间, 系统自动生成.
  // [EN] Creation time, automatically generated by system.
  google.protobuf.Timestamp created_at = 20;
}

