// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        (unknown)
// source: pb/book.proto

package pb

import (
	common "github.com/DeYu666/blog_common/gen/pb/common"
	_ "github.com/grpc-ecosystem/grpc-gateway/protoc-gen-swagger/options"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 书籍列表的状态枚举
type BooksList_Status int32

const (
	// 不限制，只是用来筛选状态用
	BooksList_STATUS_UNLIMITED BooksList_Status = 0
	// 未读
	BooksList_STATUS_NOT_START BooksList_Status = 1
	// 正在读
	BooksList_STATUS_READING BooksList_Status = 2
	// 已读完
	BooksList_STATUS_CLOSE BooksList_Status = 3
	// 占位符，用于判断最大值，这个值会随时间改变
	BooksList_STATUS_NONE BooksList_Status = 8
)

// Enum value maps for BooksList_Status.
var (
	BooksList_Status_name = map[int32]string{
		0: "STATUS_UNLIMITED",
		1: "STATUS_NOT_START",
		2: "STATUS_READING",
		3: "STATUS_CLOSE",
		8: "STATUS_NONE",
	}
	BooksList_Status_value = map[string]int32{
		"STATUS_UNLIMITED": 0,
		"STATUS_NOT_START": 1,
		"STATUS_READING":   2,
		"STATUS_CLOSE":     3,
		"STATUS_NONE":      8,
	}
)

func (x BooksList_Status) Enum() *BooksList_Status {
	p := new(BooksList_Status)
	*p = x
	return p
}

func (x BooksList_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (BooksList_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_book_proto_enumTypes[0].Descriptor()
}

func (BooksList_Status) Type() protoreflect.EnumType {
	return &file_pb_book_proto_enumTypes[0]
}

func (x BooksList_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use BooksList_Status.Descriptor instead.
func (BooksList_Status) EnumDescriptor() ([]byte, []int) {
	return file_pb_book_proto_rawDescGZIP(), []int{20, 0}
}

// 点击书籍信息查询请求结构
type ClickBooksListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 文章编号
	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *ClickBooksListRequest) Reset() {
	*x = ClickBooksListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_book_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClickBooksListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClickBooksListRequest) ProtoMessage() {}

func (x *ClickBooksListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_book_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClickBooksListRequest.ProtoReflect.Descriptor instead.
func (*ClickBooksListRequest) Descriptor() ([]byte, []int) {
	return file_pb_book_proto_rawDescGZIP(), []int{0}
}

func (x *ClickBooksListRequest) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

// 单个文章查询返回结构
type ClickBooksListsReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ClickBooksListsReply) Reset() {
	*x = ClickBooksListsReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_book_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClickBooksListsReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClickBooksListsReply) ProtoMessage() {}

func (x *ClickBooksListsReply) ProtoReflect() protoreflect.Message {
	mi := &file_pb_book_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClickBooksListsReply.ProtoReflect.Descriptor instead.
func (*ClickBooksListsReply) Descriptor() ([]byte, []int) {
	return file_pb_book_proto_rawDescGZIP(), []int{1}
}

// 书籍信息查询请求结构
type FindBooksListsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 书籍信息编号列表，用于指定查询哪些书籍信息
	Ids []uint64 `protobuf:"varint,1,rep,packed,name=ids,proto3" json:"ids,omitempty"`
	// 书籍状态
	Status BooksList_Status `protobuf:"varint,2,opt,name=status,proto3,enum=pb.BooksList_Status" json:"status,omitempty"`
	// list请求对应的翻页：offset, limit
	Page *common.ListPage `protobuf:"bytes,5,opt,name=page,proto3" json:"page,omitempty"`
}

func (x *FindBooksListsRequest) Reset() {
	*x = FindBooksListsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_book_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindBooksListsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindBooksListsRequest) ProtoMessage() {}

func (x *FindBooksListsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_book_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindBooksListsRequest.ProtoReflect.Descriptor instead.
func (*FindBooksListsRequest) Descriptor() ([]byte, []int) {
	return file_pb_book_proto_rawDescGZIP(), []int{2}
}

func (x *FindBooksListsRequest) GetIds() []uint64 {
	if x != nil {
		return x.Ids
	}
	return nil
}

func (x *FindBooksListsRequest) GetStatus() BooksList_Status {
	if x != nil {
		return x.Status
	}
	return BooksList_STATUS_UNLIMITED
}

func (x *FindBooksListsRequest) GetPage() *common.ListPage {
	if x != nil {
		return x.Page
	}
	return nil
}

// 书籍信息列表查询返回结构
type FindBooksListsReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Books []*BooksList `protobuf:"bytes,1,rep,name=books,proto3" json:"books,omitempty"`
	// list返回对应的翻页：offset, total
	Page *common.ListPage `protobuf:"bytes,2,opt,name=page,proto3" json:"page,omitempty"`
}

func (x *FindBooksListsReply) Reset() {
	*x = FindBooksListsReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_book_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindBooksListsReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindBooksListsReply) ProtoMessage() {}

func (x *FindBooksListsReply) ProtoReflect() protoreflect.Message {
	mi := &file_pb_book_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindBooksListsReply.ProtoReflect.Descriptor instead.
func (*FindBooksListsReply) Descriptor() ([]byte, []int) {
	return file_pb_book_proto_rawDescGZIP(), []int{3}
}

func (x *FindBooksListsReply) GetBooks() []*BooksList {
	if x != nil {
		return x.Books
	}
	return nil
}

func (x *FindBooksListsReply) GetPage() *common.ListPage {
	if x != nil {
		return x.Page
	}
	return nil
}

// 单个书籍信息查询请求结构
type GetBooksListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 文章编号
	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetBooksListRequest) Reset() {
	*x = GetBooksListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_book_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBooksListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBooksListRequest) ProtoMessage() {}

func (x *GetBooksListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_book_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBooksListRequest.ProtoReflect.Descriptor instead.
func (*GetBooksListRequest) Descriptor() ([]byte, []int) {
	return file_pb_book_proto_rawDescGZIP(), []int{4}
}

func (x *GetBooksListRequest) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

// 单个书籍信息查询返回结构
type GetBooksListReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Book *BooksList `protobuf:"bytes,1,opt,name=book,proto3" json:"book,omitempty"`
}

func (x *GetBooksListReply) Reset() {
	*x = GetBooksListReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_book_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBooksListReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBooksListReply) ProtoMessage() {}

func (x *GetBooksListReply) ProtoReflect() protoreflect.Message {
	mi := &file_pb_book_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBooksListReply.ProtoReflect.Descriptor instead.
func (*GetBooksListReply) Descriptor() ([]byte, []int) {
	return file_pb_book_proto_rawDescGZIP(), []int{5}
}

func (x *GetBooksListReply) GetBook() *BooksList {
	if x != nil {
		return x.Book
	}
	return nil
}

// 书籍信息新增请求结构
type CreateBooksListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 书籍信息基本信息
	Info *BooksListUpsert `protobuf:"bytes,1,opt,name=info,proto3" json:"info,omitempty"`
}

func (x *CreateBooksListRequest) Reset() {
	*x = CreateBooksListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_book_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateBooksListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateBooksListRequest) ProtoMessage() {}

func (x *CreateBooksListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_book_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateBooksListRequest.ProtoReflect.Descriptor instead.
func (*CreateBooksListRequest) Descriptor() ([]byte, []int) {
	return file_pb_book_proto_rawDescGZIP(), []int{6}
}

func (x *CreateBooksListRequest) GetInfo() *BooksListUpsert {
	if x != nil {
		return x.Info
	}
	return nil
}

// 书籍信息新增返回结构
type CreateBooksListReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 书籍信息编号
	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *CreateBooksListReply) Reset() {
	*x = CreateBooksListReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_book_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateBooksListReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateBooksListReply) ProtoMessage() {}

func (x *CreateBooksListReply) ProtoReflect() protoreflect.Message {
	mi := &file_pb_book_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateBooksListReply.ProtoReflect.Descriptor instead.
func (*CreateBooksListReply) Descriptor() ([]byte, []int) {
	return file_pb_book_proto_rawDescGZIP(), []int{7}
}

func (x *CreateBooksListReply) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

// 书籍信息修改请求结构
type UpdateBooksListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 书籍信息编号
	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	// 书籍信息基本信息
	Info *BooksListUpsert `protobuf:"bytes,2,opt,name=info,proto3" json:"info,omitempty"`
}

func (x *UpdateBooksListRequest) Reset() {
	*x = UpdateBooksListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_book_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateBooksListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateBooksListRequest) ProtoMessage() {}

func (x *UpdateBooksListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_book_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateBooksListRequest.ProtoReflect.Descriptor instead.
func (*UpdateBooksListRequest) Descriptor() ([]byte, []int) {
	return file_pb_book_proto_rawDescGZIP(), []int{8}
}

func (x *UpdateBooksListRequest) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateBooksListRequest) GetInfo() *BooksListUpsert {
	if x != nil {
		return x.Info
	}
	return nil
}

// 书籍信息修改返回结构
type UpdateBooksListReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateBooksListReply) Reset() {
	*x = UpdateBooksListReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_book_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateBooksListReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateBooksListReply) ProtoMessage() {}

func (x *UpdateBooksListReply) ProtoReflect() protoreflect.Message {
	mi := &file_pb_book_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateBooksListReply.ProtoReflect.Descriptor instead.
func (*UpdateBooksListReply) Descriptor() ([]byte, []int) {
	return file_pb_book_proto_rawDescGZIP(), []int{9}
}

// 书籍信息删除请求结构
type DeleteBooksListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 书籍信息编号
	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteBooksListRequest) Reset() {
	*x = DeleteBooksListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_book_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteBooksListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteBooksListRequest) ProtoMessage() {}

func (x *DeleteBooksListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_book_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteBooksListRequest.ProtoReflect.Descriptor instead.
func (*DeleteBooksListRequest) Descriptor() ([]byte, []int) {
	return file_pb_book_proto_rawDescGZIP(), []int{10}
}

func (x *DeleteBooksListRequest) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

// 书籍信息删除请求结构
type DeleteBooksListReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteBooksListReply) Reset() {
	*x = DeleteBooksListReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_book_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteBooksListReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteBooksListReply) ProtoMessage() {}

func (x *DeleteBooksListReply) ProtoReflect() protoreflect.Message {
	mi := &file_pb_book_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteBooksListReply.ProtoReflect.Descriptor instead.
func (*DeleteBooksListReply) Descriptor() ([]byte, []int) {
	return file_pb_book_proto_rawDescGZIP(), []int{11}
}

// 书籍内容新增请求结构
type CreateBookContentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BookId uint64       `protobuf:"varint,1,opt,name=book_id,json=bookId,proto3" json:"book_id,omitempty"`
	Info   *BookContent `protobuf:"bytes,2,opt,name=info,proto3" json:"info,omitempty"`
}

func (x *CreateBookContentRequest) Reset() {
	*x = CreateBookContentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_book_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateBookContentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateBookContentRequest) ProtoMessage() {}

func (x *CreateBookContentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_book_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateBookContentRequest.ProtoReflect.Descriptor instead.
func (*CreateBookContentRequest) Descriptor() ([]byte, []int) {
	return file_pb_book_proto_rawDescGZIP(), []int{12}
}

func (x *CreateBookContentRequest) GetBookId() uint64 {
	if x != nil {
		return x.BookId
	}
	return 0
}

func (x *CreateBookContentRequest) GetInfo() *BookContent {
	if x != nil {
		return x.Info
	}
	return nil
}

// 书籍内容新增返回结构
type CreateBookContentReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *CreateBookContentReply) Reset() {
	*x = CreateBookContentReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_book_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateBookContentReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateBookContentReply) ProtoMessage() {}

func (x *CreateBookContentReply) ProtoReflect() protoreflect.Message {
	mi := &file_pb_book_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateBookContentReply.ProtoReflect.Descriptor instead.
func (*CreateBookContentReply) Descriptor() ([]byte, []int) {
	return file_pb_book_proto_rawDescGZIP(), []int{13}
}

func (x *CreateBookContentReply) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

// 书籍内容更新请求结构
type UpdateBookContentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BookId uint64       `protobuf:"varint,1,opt,name=book_id,json=bookId,proto3" json:"book_id,omitempty"`
	Id     uint64       `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
	Info   *BookContent `protobuf:"bytes,3,opt,name=info,proto3" json:"info,omitempty"`
}

func (x *UpdateBookContentRequest) Reset() {
	*x = UpdateBookContentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_book_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateBookContentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateBookContentRequest) ProtoMessage() {}

func (x *UpdateBookContentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_book_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateBookContentRequest.ProtoReflect.Descriptor instead.
func (*UpdateBookContentRequest) Descriptor() ([]byte, []int) {
	return file_pb_book_proto_rawDescGZIP(), []int{14}
}

func (x *UpdateBookContentRequest) GetBookId() uint64 {
	if x != nil {
		return x.BookId
	}
	return 0
}

func (x *UpdateBookContentRequest) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateBookContentRequest) GetInfo() *BookContent {
	if x != nil {
		return x.Info
	}
	return nil
}

// 书籍内容更新返回结构
type UpdateBookContentReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateBookContentReply) Reset() {
	*x = UpdateBookContentReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_book_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateBookContentReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateBookContentReply) ProtoMessage() {}

func (x *UpdateBookContentReply) ProtoReflect() protoreflect.Message {
	mi := &file_pb_book_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateBookContentReply.ProtoReflect.Descriptor instead.
func (*UpdateBookContentReply) Descriptor() ([]byte, []int) {
	return file_pb_book_proto_rawDescGZIP(), []int{15}
}

// 书籍内容删除请求结构
type DeleteBookContentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BookId uint64 `protobuf:"varint,1,opt,name=book_id,json=bookId,proto3" json:"book_id,omitempty"`
	Id     uint64 `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteBookContentRequest) Reset() {
	*x = DeleteBookContentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_book_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteBookContentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteBookContentRequest) ProtoMessage() {}

func (x *DeleteBookContentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_book_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteBookContentRequest.ProtoReflect.Descriptor instead.
func (*DeleteBookContentRequest) Descriptor() ([]byte, []int) {
	return file_pb_book_proto_rawDescGZIP(), []int{16}
}

func (x *DeleteBookContentRequest) GetBookId() uint64 {
	if x != nil {
		return x.BookId
	}
	return 0
}

func (x *DeleteBookContentRequest) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

// 书籍内容删除返回结构
type DeleteBookContentReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteBookContentReply) Reset() {
	*x = DeleteBookContentReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_book_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteBookContentReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteBookContentReply) ProtoMessage() {}

func (x *DeleteBookContentReply) ProtoReflect() protoreflect.Message {
	mi := &file_pb_book_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteBookContentReply.ProtoReflect.Descriptor instead.
func (*DeleteBookContentReply) Descriptor() ([]byte, []int) {
	return file_pb_book_proto_rawDescGZIP(), []int{17}
}

// 文章插入/修改结构
type BooksListUpsert struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 可选，文章编号，主要为初始化使用
	Id uint64 `protobuf:"varint,30,opt,name=id,proto3" json:"id,omitempty"`
	// 书籍列表标题
	Title string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	// 书籍列表内容
	Body string `protobuf:"bytes,2,opt,name=body,proto3" json:"body,omitempty"`
	// 书籍列表内容摘要
	Excerpt string `protobuf:"bytes,3,opt,name=excerpt,proto3" json:"excerpt,omitempty"`
	// 书籍列表封面
	CoverUrl string `protobuf:"bytes,4,opt,name=cover_url,json=coverUrl,proto3" json:"cover_url,omitempty"`
	// 书籍列表内容抬头图
	TitleUrl string `protobuf:"bytes,5,opt,name=title_url,json=titleUrl,proto3" json:"title_url,omitempty"`
	// 书籍列表状态
	Status BooksList_Status `protobuf:"varint,6,opt,name=status,proto3,enum=pb.BooksList_Status" json:"status,omitempty"`
	// 类目编号
	CategoryId uint64 `protobuf:"varint,7,opt,name=category_id,json=categoryId,proto3" json:"category_id,omitempty"`
	// 标签编号列表
	TagIds []uint64 `protobuf:"varint,8,rep,packed,name=tag_ids,json=tagIds,proto3" json:"tag_ids,omitempty"`
	// 用户编号
	AuthorId uint64 `protobuf:"varint,9,opt,name=author_id,json=authorId,proto3" json:"author_id,omitempty"`
}

func (x *BooksListUpsert) Reset() {
	*x = BooksListUpsert{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_book_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BooksListUpsert) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BooksListUpsert) ProtoMessage() {}

func (x *BooksListUpsert) ProtoReflect() protoreflect.Message {
	mi := &file_pb_book_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BooksListUpsert.ProtoReflect.Descriptor instead.
func (*BooksListUpsert) Descriptor() ([]byte, []int) {
	return file_pb_book_proto_rawDescGZIP(), []int{18}
}

func (x *BooksListUpsert) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *BooksListUpsert) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *BooksListUpsert) GetBody() string {
	if x != nil {
		return x.Body
	}
	return ""
}

func (x *BooksListUpsert) GetExcerpt() string {
	if x != nil {
		return x.Excerpt
	}
	return ""
}

func (x *BooksListUpsert) GetCoverUrl() string {
	if x != nil {
		return x.CoverUrl
	}
	return ""
}

func (x *BooksListUpsert) GetTitleUrl() string {
	if x != nil {
		return x.TitleUrl
	}
	return ""
}

func (x *BooksListUpsert) GetStatus() BooksList_Status {
	if x != nil {
		return x.Status
	}
	return BooksList_STATUS_UNLIMITED
}

func (x *BooksListUpsert) GetCategoryId() uint64 {
	if x != nil {
		return x.CategoryId
	}
	return 0
}

func (x *BooksListUpsert) GetTagIds() []uint64 {
	if x != nil {
		return x.TagIds
	}
	return nil
}

func (x *BooksListUpsert) GetAuthorId() uint64 {
	if x != nil {
		return x.AuthorId
	}
	return 0
}

type BookContent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 书籍内容编号
	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	// 书籍内容
	BookContent string `protobuf:"bytes,2,opt,name=BookContent,proto3" json:"BookContent,omitempty"`
	// 创建时间, 系统自动生成.
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,18,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	// 修改时间, 系统自动生成.
	UpdatedAt *timestamppb.Timestamp `protobuf:"bytes,19,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
}

func (x *BookContent) Reset() {
	*x = BookContent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_book_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BookContent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BookContent) ProtoMessage() {}

func (x *BookContent) ProtoReflect() protoreflect.Message {
	mi := &file_pb_book_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BookContent.ProtoReflect.Descriptor instead.
func (*BookContent) Descriptor() ([]byte, []int) {
	return file_pb_book_proto_rawDescGZIP(), []int{19}
}

func (x *BookContent) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *BookContent) GetBookContent() string {
	if x != nil {
		return x.BookContent
	}
	return ""
}

func (x *BookContent) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *BookContent) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

// 书籍列表信息
type BooksList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 书籍列表编号
	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	// 书籍标题
	BookName string `protobuf:"bytes,2,opt,name=BookName,proto3" json:"BookName,omitempty"`
	// 书籍内容
	BookContents []*BookContent `protobuf:"bytes,3,rep,name=book_contents,json=bookContents,proto3" json:"book_contents,omitempty"`
	// 书籍列表内容摘要
	Excerpt string `protobuf:"bytes,4,opt,name=excerpt,proto3" json:"excerpt,omitempty"`
	// 书籍列表观看人数
	Views uint32 `protobuf:"varint,5,opt,name=views,proto3" json:"views,omitempty"`
	// 书籍列表内容喜欢人数
	Likes uint32 `protobuf:"varint,6,opt,name=likes,proto3" json:"likes,omitempty"`
	// 书籍列表封面
	CoverUrl string `protobuf:"bytes,7,opt,name=cover_url,json=coverUrl,proto3" json:"cover_url,omitempty"`
	// 书籍列表内容抬头图
	TitleUrl string `protobuf:"bytes,8,opt,name=title_url,json=titleUrl,proto3" json:"title_url,omitempty"`
	// 书籍状态
	Status BooksList_Status `protobuf:"varint,9,opt,name=status,proto3,enum=pb.BooksList_Status" json:"status,omitempty"`
	// 标签编号列表
	TagIds []uint64 `protobuf:"varint,11,rep,packed,name=tag_ids,json=tagIds,proto3" json:"tag_ids,omitempty"`
	// 用户编号
	AuthorId uint64 `protobuf:"varint,12,opt,name=author_id,json=authorId,proto3" json:"author_id,omitempty"`
	// 创建时间, 系统自动生成.
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,18,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	// 修改时间, 系统自动生成.
	UpdatedAt *timestamppb.Timestamp `protobuf:"bytes,19,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
}

func (x *BooksList) Reset() {
	*x = BooksList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_book_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BooksList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BooksList) ProtoMessage() {}

func (x *BooksList) ProtoReflect() protoreflect.Message {
	mi := &file_pb_book_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BooksList.ProtoReflect.Descriptor instead.
func (*BooksList) Descriptor() ([]byte, []int) {
	return file_pb_book_proto_rawDescGZIP(), []int{20}
}

func (x *BooksList) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *BooksList) GetBookName() string {
	if x != nil {
		return x.BookName
	}
	return ""
}

func (x *BooksList) GetBookContents() []*BookContent {
	if x != nil {
		return x.BookContents
	}
	return nil
}

func (x *BooksList) GetExcerpt() string {
	if x != nil {
		return x.Excerpt
	}
	return ""
}

func (x *BooksList) GetViews() uint32 {
	if x != nil {
		return x.Views
	}
	return 0
}

func (x *BooksList) GetLikes() uint32 {
	if x != nil {
		return x.Likes
	}
	return 0
}

func (x *BooksList) GetCoverUrl() string {
	if x != nil {
		return x.CoverUrl
	}
	return ""
}

func (x *BooksList) GetTitleUrl() string {
	if x != nil {
		return x.TitleUrl
	}
	return ""
}

func (x *BooksList) GetStatus() BooksList_Status {
	if x != nil {
		return x.Status
	}
	return BooksList_STATUS_UNLIMITED
}

func (x *BooksList) GetTagIds() []uint64 {
	if x != nil {
		return x.TagIds
	}
	return nil
}

func (x *BooksList) GetAuthorId() uint64 {
	if x != nil {
		return x.AuthorId
	}
	return 0
}

func (x *BooksList) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *BooksList) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

var File_pb_book_proto protoreflect.FileDescriptor

var file_pb_book_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x70, 0x62, 0x2f, 0x62, 0x6f, 0x6f, 0x6b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x02, 0x70, 0x62, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f,
	0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x2c, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x2d, 0x67, 0x65, 0x6e, 0x2d, 0x73,
	0x77, 0x61, 0x67, 0x67, 0x65, 0x72, 0x2f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x61,
	0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x16, 0x70, 0x62, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x27, 0x0a, 0x15, 0x43, 0x6c, 0x69, 0x63,
	0x6b, 0x42, 0x6f, 0x6f, 0x6b, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69,
	0x64, 0x22, 0x16, 0x0a, 0x14, 0x43, 0x6c, 0x69, 0x63, 0x6b, 0x42, 0x6f, 0x6f, 0x6b, 0x73, 0x4c,
	0x69, 0x73, 0x74, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x7d, 0x0a, 0x15, 0x46, 0x69, 0x6e,
	0x64, 0x42, 0x6f, 0x6f, 0x6b, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x04, 0x52,
	0x03, 0x69, 0x64, 0x73, 0x12, 0x2c, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x14, 0x2e, 0x70, 0x62, 0x2e, 0x42, 0x6f, 0x6f, 0x6b, 0x73, 0x4c,
	0x69, 0x73, 0x74, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x24, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x10, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x61,
	0x67, 0x65, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x22, 0x60, 0x0a, 0x13, 0x46, 0x69, 0x6e, 0x64,
	0x42, 0x6f, 0x6f, 0x6b, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12,
	0x23, 0x0a, 0x05, 0x62, 0x6f, 0x6f, 0x6b, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d,
	0x2e, 0x70, 0x62, 0x2e, 0x42, 0x6f, 0x6f, 0x6b, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x05, 0x62,
	0x6f, 0x6f, 0x6b, 0x73, 0x12, 0x24, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x10, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x4c, 0x69, 0x73, 0x74,
	0x50, 0x61, 0x67, 0x65, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x22, 0x25, 0x0a, 0x13, 0x47, 0x65,
	0x74, 0x42, 0x6f, 0x6f, 0x6b, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69,
	0x64, 0x22, 0x36, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x42, 0x6f, 0x6f, 0x6b, 0x73, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x21, 0x0a, 0x04, 0x62, 0x6f, 0x6f, 0x6b, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x62, 0x2e, 0x42, 0x6f, 0x6f, 0x6b, 0x73, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x04, 0x62, 0x6f, 0x6f, 0x6b, 0x22, 0x41, 0x0a, 0x16, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x42, 0x6f, 0x6f, 0x6b, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x27, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x13, 0x2e, 0x70, 0x62, 0x2e, 0x42, 0x6f, 0x6f, 0x6b, 0x73, 0x4c, 0x69, 0x73, 0x74,
	0x55, 0x70, 0x73, 0x65, 0x72, 0x74, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x22, 0x26, 0x0a, 0x14,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x6f, 0x6f, 0x6b, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x02, 0x69, 0x64, 0x22, 0x51, 0x0a, 0x16, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x6f,
	0x6f, 0x6b, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x27,
	0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x70,
	0x62, 0x2e, 0x42, 0x6f, 0x6f, 0x6b, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x55, 0x70, 0x73, 0x65, 0x72,
	0x74, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x22, 0x16, 0x0a, 0x14, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x42, 0x6f, 0x6f, 0x6b, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22,
	0x28, 0x0a, 0x16, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x42, 0x6f, 0x6f, 0x6b, 0x73, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x22, 0x16, 0x0a, 0x14, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x42, 0x6f, 0x6f, 0x6b, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x22, 0x58, 0x0a, 0x18, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x6f, 0x6f, 0x6b, 0x43,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a,
	0x07, 0x62, 0x6f, 0x6f, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06,
	0x62, 0x6f, 0x6f, 0x6b, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x70, 0x62, 0x2e, 0x42, 0x6f, 0x6f, 0x6b, 0x43, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x22, 0x28, 0x0a, 0x16, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x6f, 0x6f, 0x6b, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x02, 0x69, 0x64, 0x22, 0x68, 0x0a, 0x18, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42,
	0x6f, 0x6f, 0x6b, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x17, 0x0a, 0x07, 0x62, 0x6f, 0x6f, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x06, 0x62, 0x6f, 0x6f, 0x6b, 0x49, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x23, 0x0a, 0x04, 0x69, 0x6e,
	0x66, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x70, 0x62, 0x2e, 0x42, 0x6f,
	0x6f, 0x6b, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x22,
	0x18, 0x0a, 0x16, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x6f, 0x6f, 0x6b, 0x43, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x43, 0x0a, 0x18, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x42, 0x6f, 0x6f, 0x6b, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x62, 0x6f, 0x6f, 0x6b, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x62, 0x6f, 0x6f, 0x6b, 0x49, 0x64, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x22, 0x18,
	0x0a, 0x16, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x42, 0x6f, 0x6f, 0x6b, 0x43, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0xa4, 0x02, 0x0a, 0x0f, 0x42, 0x6f, 0x6f,
	0x6b, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x55, 0x70, 0x73, 0x65, 0x72, 0x74, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05,
	0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74,
	0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x78, 0x63, 0x65, 0x72, 0x70,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x65, 0x78, 0x63, 0x65, 0x72, 0x70, 0x74,
	0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x55, 0x72, 0x6c, 0x12, 0x1b, 0x0a,
	0x09, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x55, 0x72, 0x6c, 0x12, 0x2c, 0x0a, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x14, 0x2e, 0x70, 0x62, 0x2e,
	0x42, 0x6f, 0x6f, 0x6b, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x61, 0x74, 0x65,
	0x67, 0x6f, 0x72, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x63,
	0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x74, 0x61, 0x67,
	0x5f, 0x69, 0x64, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x04, 0x52, 0x06, 0x74, 0x61, 0x67, 0x49,
	0x64, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x49, 0x64, 0x22,
	0xb5, 0x01, 0x0a, 0x0b, 0x42, 0x6f, 0x6f, 0x6b, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x20, 0x0a, 0x0b, 0x42, 0x6f, 0x6f, 0x6b, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x42, 0x6f, 0x6f, 0x6b, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18,
	0x12, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x39, 0x0a, 0x0a,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x13, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0xb4, 0x04, 0x0a, 0x09, 0x42, 0x6f, 0x6f, 0x6b,
	0x73, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x42, 0x6f, 0x6f, 0x6b, 0x4e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x42, 0x6f, 0x6f, 0x6b, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x34, 0x0a, 0x0d, 0x62, 0x6f, 0x6f, 0x6b, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x70, 0x62, 0x2e, 0x42, 0x6f,
	0x6f, 0x6b, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x52, 0x0c, 0x62, 0x6f, 0x6f, 0x6b, 0x43,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x78, 0x63, 0x65, 0x72,
	0x70, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x65, 0x78, 0x63, 0x65, 0x72, 0x70,
	0x74, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x69, 0x65, 0x77, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x05, 0x76, 0x69, 0x65, 0x77, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6b, 0x65, 0x73,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x6c, 0x69, 0x6b, 0x65, 0x73, 0x12, 0x1b, 0x0a,
	0x09, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x55, 0x72, 0x6c, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x69,
	0x74, 0x6c, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74,
	0x69, 0x74, 0x6c, 0x65, 0x55, 0x72, 0x6c, 0x12, 0x2c, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x14, 0x2e, 0x70, 0x62, 0x2e, 0x42, 0x6f, 0x6f,
	0x6b, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x17, 0x0a, 0x07, 0x74, 0x61, 0x67, 0x5f, 0x69, 0x64, 0x73,
	0x18, 0x0b, 0x20, 0x03, 0x28, 0x04, 0x52, 0x06, 0x74, 0x61, 0x67, 0x49, 0x64, 0x73, 0x12, 0x1b,
	0x0a, 0x09, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x08, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x49, 0x64, 0x12, 0x39, 0x0a, 0x0a, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x12, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x39, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x64, 0x5f, 0x61, 0x74, 0x18, 0x13, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x22, 0x6b, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x14, 0x0a, 0x10, 0x53,
	0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x55, 0x4e, 0x4c, 0x49, 0x4d, 0x49, 0x54, 0x45, 0x44, 0x10,
	0x00, 0x12, 0x14, 0x0a, 0x10, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x4e, 0x4f, 0x54, 0x5f,
	0x53, 0x54, 0x41, 0x52, 0x54, 0x10, 0x01, 0x12, 0x12, 0x0a, 0x0e, 0x53, 0x54, 0x41, 0x54, 0x55,
	0x53, 0x5f, 0x52, 0x45, 0x41, 0x44, 0x49, 0x4e, 0x47, 0x10, 0x02, 0x12, 0x10, 0x0a, 0x0c, 0x53,
	0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x43, 0x4c, 0x4f, 0x53, 0x45, 0x10, 0x03, 0x12, 0x0f, 0x0a,
	0x0b, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x08, 0x32, 0x85,
	0x07, 0x0a, 0x10, 0x42, 0x6f, 0x6f, 0x6b, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x12, 0x5c, 0x0a, 0x0e, 0x46, 0x69, 0x6e, 0x64, 0x42, 0x6f, 0x6f, 0x6b, 0x73,
	0x4c, 0x69, 0x73, 0x74, 0x73, 0x12, 0x19, 0x2e, 0x70, 0x62, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x42,
	0x6f, 0x6f, 0x6b, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x17, 0x2e, 0x70, 0x62, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x42, 0x6f, 0x6f, 0x6b, 0x73, 0x4c,
	0x69, 0x73, 0x74, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x16, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x10, 0x12, 0x0e, 0x2f, 0x76, 0x31, 0x2f, 0x62, 0x6f, 0x6f, 0x6b, 0x73, 0x5f, 0x6c, 0x69, 0x73,
	0x74, 0x12, 0x5b, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x42, 0x6f, 0x6f, 0x6b, 0x73, 0x4c, 0x69, 0x73,
	0x74, 0x12, 0x17, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x6f, 0x6f, 0x6b, 0x73, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e, 0x70, 0x62, 0x2e,
	0x47, 0x65, 0x74, 0x42, 0x6f, 0x6f, 0x6b, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x22, 0x1b, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x15, 0x12, 0x13, 0x2f, 0x76, 0x31, 0x2f, 0x62,
	0x6f, 0x6f, 0x6b, 0x73, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x12, 0x65,
	0x0a, 0x0f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x6f, 0x6f, 0x6b, 0x73, 0x4c, 0x69, 0x73,
	0x74, 0x12, 0x1a, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x6f, 0x6f,
	0x6b, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e,
	0x70, 0x62, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x6f, 0x6f, 0x6b, 0x73, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x1c, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x16, 0x3a,
	0x04, 0x69, 0x6e, 0x66, 0x6f, 0x22, 0x0e, 0x2f, 0x76, 0x31, 0x2f, 0x62, 0x6f, 0x6f, 0x6b, 0x73,
	0x5f, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x6a, 0x0a, 0x0f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42,
	0x6f, 0x6f, 0x6b, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1a, 0x2e, 0x70, 0x62, 0x2e, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x42, 0x6f, 0x6f, 0x6b, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x70, 0x62, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x42, 0x6f, 0x6f, 0x6b, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x21,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1b, 0x3a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x1a, 0x13, 0x2f, 0x76,
	0x31, 0x2f, 0x62, 0x6f, 0x6f, 0x6b, 0x73, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x2f, 0x7b, 0x69, 0x64,
	0x7d, 0x12, 0x64, 0x0a, 0x0f, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x42, 0x6f, 0x6f, 0x6b, 0x73,
	0x4c, 0x69, 0x73, 0x74, 0x12, 0x1a, 0x2e, 0x70, 0x62, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x42, 0x6f, 0x6f, 0x6b, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x18, 0x2e, 0x70, 0x62, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x42, 0x6f, 0x6f, 0x6b,
	0x73, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x1b, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x15, 0x2a, 0x13, 0x2f, 0x76, 0x31, 0x2f, 0x62, 0x6f, 0x6f, 0x6b, 0x73, 0x5f, 0x6c, 0x69,
	0x73, 0x74, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x12, 0x7c, 0x0a, 0x11, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x42, 0x6f, 0x6f, 0x6b, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x1c, 0x2e, 0x70,
	0x62, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x6f, 0x6f, 0x6b, 0x43, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x70, 0x62, 0x2e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x6f, 0x6f, 0x6b, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x2d, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x27, 0x3a, 0x04,
	0x69, 0x6e, 0x66, 0x6f, 0x22, 0x1f, 0x2f, 0x76, 0x31, 0x2f, 0x62, 0x6f, 0x6f, 0x6b, 0x2f, 0x7b,
	0x62, 0x6f, 0x6f, 0x6b, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x62, 0x6f, 0x6f, 0x6b, 0x5f, 0x63, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x81, 0x01, 0x0a, 0x11, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x42, 0x6f, 0x6f, 0x6b, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x1c, 0x2e, 0x70, 0x62,
	0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x6f, 0x6f, 0x6b, 0x43, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x70, 0x62, 0x2e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x6f, 0x6f, 0x6b, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x32, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2c, 0x3a, 0x04, 0x69,
	0x6e, 0x66, 0x6f, 0x1a, 0x24, 0x2f, 0x76, 0x31, 0x2f, 0x62, 0x6f, 0x6f, 0x6b, 0x2f, 0x7b, 0x62,
	0x6f, 0x6f, 0x6b, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x62, 0x6f, 0x6f, 0x6b, 0x5f, 0x63, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x12, 0x7b, 0x0a, 0x11, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x42, 0x6f, 0x6f, 0x6b, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x1c,
	0x2e, 0x70, 0x62, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x42, 0x6f, 0x6f, 0x6b, 0x43, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x70,
	0x62, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x42, 0x6f, 0x6f, 0x6b, 0x43, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x2c, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x26,
	0x2a, 0x24, 0x2f, 0x76, 0x31, 0x2f, 0x62, 0x6f, 0x6f, 0x6b, 0x2f, 0x7b, 0x62, 0x6f, 0x6f, 0x6b,
	0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x62, 0x6f, 0x6f, 0x6b, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x42, 0x56, 0x5a, 0x2c, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x44, 0x65, 0x59, 0x75, 0x36, 0x36, 0x36, 0x2f, 0x62, 0x6c, 0x6f,
	0x67, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f,
	0x67, 0x65, 0x6e, 0x2f, 0x70, 0x62, 0x92, 0x41, 0x25, 0x12, 0x23, 0x0a, 0x19, 0x62, 0x6c, 0x6f,
	0x67, 0x20, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x3a, 0x20, 0x70, 0x6f, 0x73, 0x74, 0x20, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x32, 0x06, 0x76, 0x31, 0x2e, 0x30, 0x2e, 0x30, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_pb_book_proto_rawDescOnce sync.Once
	file_pb_book_proto_rawDescData = file_pb_book_proto_rawDesc
)

func file_pb_book_proto_rawDescGZIP() []byte {
	file_pb_book_proto_rawDescOnce.Do(func() {
		file_pb_book_proto_rawDescData = protoimpl.X.CompressGZIP(file_pb_book_proto_rawDescData)
	})
	return file_pb_book_proto_rawDescData
}

var file_pb_book_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_pb_book_proto_msgTypes = make([]protoimpl.MessageInfo, 21)
var file_pb_book_proto_goTypes = []interface{}{
	(BooksList_Status)(0),            // 0: pb.BooksList.Status
	(*ClickBooksListRequest)(nil),    // 1: pb.ClickBooksListRequest
	(*ClickBooksListsReply)(nil),     // 2: pb.ClickBooksListsReply
	(*FindBooksListsRequest)(nil),    // 3: pb.FindBooksListsRequest
	(*FindBooksListsReply)(nil),      // 4: pb.FindBooksListsReply
	(*GetBooksListRequest)(nil),      // 5: pb.GetBooksListRequest
	(*GetBooksListReply)(nil),        // 6: pb.GetBooksListReply
	(*CreateBooksListRequest)(nil),   // 7: pb.CreateBooksListRequest
	(*CreateBooksListReply)(nil),     // 8: pb.CreateBooksListReply
	(*UpdateBooksListRequest)(nil),   // 9: pb.UpdateBooksListRequest
	(*UpdateBooksListReply)(nil),     // 10: pb.UpdateBooksListReply
	(*DeleteBooksListRequest)(nil),   // 11: pb.DeleteBooksListRequest
	(*DeleteBooksListReply)(nil),     // 12: pb.DeleteBooksListReply
	(*CreateBookContentRequest)(nil), // 13: pb.CreateBookContentRequest
	(*CreateBookContentReply)(nil),   // 14: pb.CreateBookContentReply
	(*UpdateBookContentRequest)(nil), // 15: pb.UpdateBookContentRequest
	(*UpdateBookContentReply)(nil),   // 16: pb.UpdateBookContentReply
	(*DeleteBookContentRequest)(nil), // 17: pb.DeleteBookContentRequest
	(*DeleteBookContentReply)(nil),   // 18: pb.DeleteBookContentReply
	(*BooksListUpsert)(nil),          // 19: pb.BooksListUpsert
	(*BookContent)(nil),              // 20: pb.BookContent
	(*BooksList)(nil),                // 21: pb.BooksList
	(*common.ListPage)(nil),          // 22: common.ListPage
	(*timestamppb.Timestamp)(nil),    // 23: google.protobuf.Timestamp
}
var file_pb_book_proto_depIdxs = []int32{
	0,  // 0: pb.FindBooksListsRequest.status:type_name -> pb.BooksList.Status
	22, // 1: pb.FindBooksListsRequest.page:type_name -> common.ListPage
	21, // 2: pb.FindBooksListsReply.books:type_name -> pb.BooksList
	22, // 3: pb.FindBooksListsReply.page:type_name -> common.ListPage
	21, // 4: pb.GetBooksListReply.book:type_name -> pb.BooksList
	19, // 5: pb.CreateBooksListRequest.info:type_name -> pb.BooksListUpsert
	19, // 6: pb.UpdateBooksListRequest.info:type_name -> pb.BooksListUpsert
	20, // 7: pb.CreateBookContentRequest.info:type_name -> pb.BookContent
	20, // 8: pb.UpdateBookContentRequest.info:type_name -> pb.BookContent
	0,  // 9: pb.BooksListUpsert.status:type_name -> pb.BooksList.Status
	23, // 10: pb.BookContent.created_at:type_name -> google.protobuf.Timestamp
	23, // 11: pb.BookContent.updated_at:type_name -> google.protobuf.Timestamp
	20, // 12: pb.BooksList.book_contents:type_name -> pb.BookContent
	0,  // 13: pb.BooksList.status:type_name -> pb.BooksList.Status
	23, // 14: pb.BooksList.created_at:type_name -> google.protobuf.Timestamp
	23, // 15: pb.BooksList.updated_at:type_name -> google.protobuf.Timestamp
	3,  // 16: pb.BooksListService.FindBooksLists:input_type -> pb.FindBooksListsRequest
	5,  // 17: pb.BooksListService.GetBooksList:input_type -> pb.GetBooksListRequest
	7,  // 18: pb.BooksListService.CreateBooksList:input_type -> pb.CreateBooksListRequest
	9,  // 19: pb.BooksListService.UpdateBooksList:input_type -> pb.UpdateBooksListRequest
	11, // 20: pb.BooksListService.DeleteBooksList:input_type -> pb.DeleteBooksListRequest
	13, // 21: pb.BooksListService.CreateBookContent:input_type -> pb.CreateBookContentRequest
	15, // 22: pb.BooksListService.UpdateBookContent:input_type -> pb.UpdateBookContentRequest
	17, // 23: pb.BooksListService.DeleteBookContent:input_type -> pb.DeleteBookContentRequest
	4,  // 24: pb.BooksListService.FindBooksLists:output_type -> pb.FindBooksListsReply
	6,  // 25: pb.BooksListService.GetBooksList:output_type -> pb.GetBooksListReply
	8,  // 26: pb.BooksListService.CreateBooksList:output_type -> pb.CreateBooksListReply
	10, // 27: pb.BooksListService.UpdateBooksList:output_type -> pb.UpdateBooksListReply
	12, // 28: pb.BooksListService.DeleteBooksList:output_type -> pb.DeleteBooksListReply
	14, // 29: pb.BooksListService.CreateBookContent:output_type -> pb.CreateBookContentReply
	16, // 30: pb.BooksListService.UpdateBookContent:output_type -> pb.UpdateBookContentReply
	18, // 31: pb.BooksListService.DeleteBookContent:output_type -> pb.DeleteBookContentReply
	24, // [24:32] is the sub-list for method output_type
	16, // [16:24] is the sub-list for method input_type
	16, // [16:16] is the sub-list for extension type_name
	16, // [16:16] is the sub-list for extension extendee
	0,  // [0:16] is the sub-list for field type_name
}

func init() { file_pb_book_proto_init() }
func file_pb_book_proto_init() {
	if File_pb_book_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_pb_book_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClickBooksListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_book_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClickBooksListsReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_book_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindBooksListsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_book_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindBooksListsReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_book_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBooksListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_book_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBooksListReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_book_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateBooksListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_book_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateBooksListReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_book_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateBooksListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_book_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateBooksListReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_book_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteBooksListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_book_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteBooksListReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_book_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateBookContentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_book_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateBookContentReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_book_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateBookContentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_book_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateBookContentReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_book_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteBookContentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_book_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteBookContentReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_book_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BooksListUpsert); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_book_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BookContent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_book_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BooksList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_pb_book_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   21,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_pb_book_proto_goTypes,
		DependencyIndexes: file_pb_book_proto_depIdxs,
		EnumInfos:         file_pb_book_proto_enumTypes,
		MessageInfos:      file_pb_book_proto_msgTypes,
	}.Build()
	File_pb_book_proto = out.File
	file_pb_book_proto_rawDesc = nil
	file_pb_book_proto_goTypes = nil
	file_pb_book_proto_depIdxs = nil
}
